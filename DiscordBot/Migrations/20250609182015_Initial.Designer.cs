// <auto-generated />
using System;
using DiscordBot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiscordBot.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250609182015_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("DiscordBot.Database.EventEntity", b =>
                {
                    b.Property<int>("InternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EventDateTime")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("InternalId");

                    b.HasIndex("GuildId", "Id")
                        .IsUnique();

                    b.ToTable("events");
                });

            modelBuilder.Entity("DiscordBot.Database.EventRepeatabilityEntity", b =>
                {
                    b.Property<int>("InternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DayOfWeek")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan?>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("InternalId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("GuildId", "Id")
                        .IsUnique();

                    b.ToTable("event_repeatability");
                });

            modelBuilder.Entity("DiscordBot.Database.EventTemplateEntity", b =>
                {
                    b.Property<int>("InternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("InternalId");

                    b.HasIndex("GuildId", "Id")
                        .IsUnique();

                    b.ToTable("event_templates");
                });

            modelBuilder.Entity("DiscordBot.Database.SettingsEntity", b =>
                {
                    b.Property<int>("InternalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InternalId");

                    b.HasIndex("GuildId")
                        .IsUnique();

                    b.ToTable("settings");
                });

            modelBuilder.Entity("DiscordBot.Database.EventRepeatabilityEntity", b =>
                {
                    b.HasOne("DiscordBot.Database.EventTemplateEntity", "EventTemplateEntity")
                        .WithOne("EventRepeatabilityEntity")
                        .HasForeignKey("DiscordBot.Database.EventRepeatabilityEntity", "Id")
                        .HasPrincipalKey("DiscordBot.Database.EventTemplateEntity", "Id");

                    b.Navigation("EventTemplateEntity");
                });

            modelBuilder.Entity("DiscordBot.Database.EventTemplateEntity", b =>
                {
                    b.Navigation("EventRepeatabilityEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
